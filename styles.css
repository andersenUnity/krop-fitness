@font-face {
    font-family: Heeboo, sans-serif;
    src: url('./fonts/heebo-variable.woff2') format('woff2');
    font-weight: 300 700;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: Yantaramanav, sans-serif;
    src: url("./fonts/yantramanav-bold.woff2") format("woff2");
    font-weight: 700;
    font-style: normal;
    font-display: swap;
}

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
    box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
    padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
    margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol,
  dl
):where([class]) {
    margin-block: 0;
}

:where(dd[class]) {
    margin-left: 0;
}

:where(fieldset[class]) {
    padding: 0;
    border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
    list-style: none;
}

:where(address[class]) {
    font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
    --paragraphMarginBottom: 24px;

    margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
    margin-bottom: var(--paragraphMarginBottom);
}


/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
    display: block;
    max-width: 100%;
    height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
    font: inherit;
}

html {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    height: 100%;
    /**
      Убираем скачок интерфейса по горизонтали
      при появлении / исчезновении скроллбара
     */
    scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
    scroll-behavior: smooth;
}

body {
    /**
      Пригодится в большинстве ситуаций
      (когда, например, нужно будет "прижать" футер к низу сайта)
     */
    min-height: 100%;
    /**
      Унифицированный интерлиньяж
     */
    line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
    display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
    cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not(
  [fill="none"],
  [fill^="url"]
)) {
    fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not(
  [stroke="none"],
  [stroke^="url"]
)) {
    stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
    transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
    border-collapse: collapse;
    border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
    *,
    ::before,
    ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

:root {
    --color-dark: #000;
    --color-light: #fff;
    --color-dark-gray: #404040;
    --color-dark-alternate: #131619;
    --color-light-gray: #C4C4C4;

    --border-radius: 30px;
    --border: 1px solid var(--color-light);

    --font-family-base: Heeboo, sans-serif;
    --font-family-accent: Yantaramanav, sans-serif;

    --input-height: 54px;

    --container-width: 1300px;
    --container-padding-x: 15px;

    --transition-duration: 0.2s;

    --header-height: 90px;
}

body{
    font-family: var(--font-family-base);
    color: var(--color-light-gray);
    font-size: 16px;
    line-height: 1.75;
    background-color: var(--color-dark);
}

a,
button,
input,
textarea,
svg * {
    transition-duration: var(--transition-duration);
}

a{
    color: var(--color-light);

    &:hover{
    color: var(--color-light-gray);
    }
}

.container{
    max-width: calc(var(--container-width) + (var(--container-padding-x)) * 2);
    margin-inline: auto;
    padding-inline: var(--container-padding-x);
}

h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    text-transform: uppercase;
}

.visually-hidden {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
    margin: -1px -1px 0 !important;
    border: 0 !important;
    padding: 0 !important;
    white-space: nowrap !important;
    clip-path: inset(100%) !important;
    clip: rect(0 0 0 0) !important;
    overflow: hidden !important;
}

.button{
    display: inline-flex;
    height: 38px;
    align-items: center;
    padding-inline: 26px;
    font-weight: 700;
    font-size: 12px;
    line-height: 2;
    letter-spacing: 0.1em;
    text-transform: uppercase;
    white-space: nowrap;
    background-color: var(--color-light);
    border: none;
    border-radius: var(--border-radius);

    &:hover{
        background-color: var(--color-light-gray);
    }
}

.header{
    display: flex;
    justify-content: space-between;
    align-items: center;
    column-gap: 20px;
    padding-inline: 32px;
    background-color: var(--color-dark-alternate);
    min-height: var(--header-height);
}

.header-logo{
    flex-shrink: 0;
}

.header-menu-list{
    display: flex;
    column-gap: 50px;
    flex-wrap: wrap;
}

.header-menu-link{
    align-items: center;
    display: inline-flex;
    column-gap: 7px;
    height: var(--header-height);
    text-transform: uppercase;
    font-weight: bold;
    text-decoration: none;
    font-size: 12px;
    letter-spacing: 0.1rem;
}

.header-menu-link.is-current::after{
    content:"";
    width: 5px;
    aspect-ratio: 1;
    background-color: currentColor;
    border-radius: 50%;
}

.header-actions{
    display: flex;
    column-gap: 40px;
}

.header-burger-button{
    display: inline-flex;
    flex-direction: column;
    justify-content: center;
    row-gap: 4px;
    width: 40px;
    aspect-ratio: 1;
    color: var(--color-light);
    border-radius: 50%;
    border: var(--border);
    background-color: transparent;
    padding-left: 8px;

    &:hover{
        color: var(--color-light-gray);
        border-color: currentColor;
    }
}

.header-burger-button-line{
    width: 6px;
    height: 1px;
    background-color: currentColor;
    box-shadow: 16px 0 0 currentColor;
}

.banner{
    display: flex;
    flex-direction: column;
    justify-content: end;
    padding: 36px 70px;
    min-height: calc(100vh - var(--header-height));
    background-color: var(--color-dark-alternate);
    color: var(--color-light);
}

.banner-body{
    font-size: 30px;
    text-transform: uppercase;
}

.banner-info{
    display: flex;
    align-items: end;
    font-size: clamp(16px, 1.56vw, 30px);
    line-height: 1.27;
    font-weight: bold;

    &::before{
        content: "";
        width: clamp(60px,10.1vw,194px);
        aspect-ratio: 1;
        margin-right: 30px;
        background: url("./icons/bold-arrow-down-right.svg") center/contain no-repeat;
    }
}
.banner-title{
    font-size: min(360px, 18.75vw);
    line-height: 1;
}

.banner-pagination-list{
    margin: auto;
    display: flex;
    align-items: center;
    justify-content: center;
}

.banner-pagination-item{
    display: flex;
}
.banner-pagination-button {
    display: inline-flex;
    align-items: center;
    background-color: transparent;
    border: none;
    padding: 7px;
    &::after{
        content: "";
        width: 10px;
        aspect-ratio: 1;
        border-radius: 50%;
        border: var(--border);
        transition: var(--transition-duration);
    }
    &.is-current::after{
        background-color: var(--color-light);
    }

    &:not(.is-current):hover::after{
        border-color: var(--color-light-gray);
    }
}

@media (max-width: 1024px){
    .header{
        flex-wrap: wrap;
        padding-top: 20px;
        row-gap: 10px;
    }
    .header, .banner{
        padding-inline: 15px;
    }

    .header-menu{
        order: 1;
        flex-basis: 100%;
    }
    .header-menu-link{
        height: 40px;
    }
    .banner {
        row-gap: 10px;
    }
}

@media (max-width: 767px){

    .header{
        padding-top: 10px
    }

    .header-menu-list{
        column-gap: 24px;
    }

    .header-menu-link{
        height: 32px
    }

    .header-actions{
        column-gap: 20px;
    }

    .button{
        padding-inline: 18px;
    }
    .banner-info{
        margin-bottom: 5px;
        &::before {
            margin-right: 10px
        }
    }
}